import nltk
from nltk.tokenize import word_tokenize
from nltk.sentiment import SentimentIntensityAnalyzer

# Load the NLTK data needed for sentiment analysis
nltk.download('vader_lexicon')

# Initialize the sentiment intensity analyzer
sia = SentimentIntensityAnalyzer()

# Example text
text = "One tyre went missing, so there was a delay to get the two tyres fitted. The way garage dealt with it was fantastic."

# Tokenize the text
tokens = word_tokenize(text)

# Identify the subthemes
subthemes = []
for token in tokens:
    if token.startswith('tyre'):
        subthemes.append('Incorrect Tyres Sent')
    elif token.startswith('delay'):
        subthemes.append('Wait Time')
    elif token.startswith('garage'):
        subthemes.append('Garage Service')

# Analyze the sentiment of each subtheme
sentiments = {}
for subtheme in subthemes:
    sentiment = sia.polarity_scores(subtheme)
    sentiments[subtheme] = sentiment['compound']

# Print the results
for subtheme, sentiment in sentiments.items():
    if sentiment > 0:
        print(f"{subtheme}: Positive ({sentiment:.2f})")
    elif sentiment < 0:
        print(f"{subtheme}: Negative ({sentiment:.2f})")
    else:
        print(f"{subtheme}: Neutral ({sentiment:.2f})")
